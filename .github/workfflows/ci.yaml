---
name: "Terraform CI"

on:
  pull_request:
  push: { branches: [main] }

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ASSUME_IAM_ROLE_ARN_ACCESS_TERRAFORM_STATE_BACKEND }}
          role-session-name: github-actions-assume-role-session
          aws-region: ${{ env.AWS_REGION }}

      - name: Check out code
        uses: actions/checkout@v4

      - name: Run Terrascan
        id: terrascan
        uses: accurics/terrascan-action@main
        with:
          iac_type: "terraform"
          iac_version: "v14"
          only_warn: true
          policy_type: "aws"

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.0"

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      # - name: Terraform init
      #   id: init
      #   run: terraform init
      #   working-directory: ${{ env.working-directory }}

      # - name: Terraform validate
      #   id: validate
      #   run: terraform validate

      # - name: Terraform plan
      #   id: plan
      #   run: terraform plan -no-color
      #   working-directory: ${{ env.working-directory }}

      # - name: Plan output
      #   id: output
      #   uses: actions/github-script@v7
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       ### Workspace

      #       \`${process.env.TF_WORKSPACE}\`

      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      #       <details><summary>Show Plan</summary>

      #       \`\`\`hcl
      #       ${process.env.PLAN}
      #       \`\`\`

      #       </details>

      #       **Pusher**: @${{ github.actor }}
      #       **Action**: ${{ github.event_name }}
      #       `;
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
